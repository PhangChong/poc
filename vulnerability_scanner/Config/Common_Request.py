import requests
import urllib3


def common_request(url, path, headers, data=None,json=None, method='GET', params=None, timeout=10, proxies=None,
                   append_to_output=None):
    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url

    target_url = url + path

    try:
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
        if method == 'GET':
            response = requests.get(target_url, headers=headers, params=params, verify=False, timeout=timeout,
                                    proxies=proxies)
        elif method == 'POST':
            response = requests.post(target_url, data=data, json=json, headers=headers, verify=False, timeout=timeout,
                                     proxies=proxies)
        elif method == 'PUT':
            response = requests.put(target_url, data=data, json=json, headers=headers, verify=False, timeout=timeout,
                                     proxies=proxies)
        else:
            return None
        return response
    except requests.Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except requests.ConnectionError as conn_err:
        append_to_output(f"[!] 连接错误: {conn_err}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(str(e), "yellow")
    return None
