import tkinter as tk
from tkinter import filedialog, messagebox, Toplevel, Checkbutton, IntVar

import threading
import urllib3
from Config import start_vulner_list
from Config.fofa import FOFA
from Config.LoadJson import loadJson
from poc import ceshi, CERIO_DT_Series_Router_Command_Vul_scan, Altenergy_Power_System_Control_scan, \
    Dahua_DSS_system_itcBulletin_SQL_injection_scan, Byzoro_Smart_Management_upload_scan, CVE_2024_2330_scan, \
    CVE_2024_27198_scan, ANHENG_Mingyu_security_gateway_file_upload_scan, Dahua_QVD_2023_45063_scan, \
    JS_ligerComboBox_information_scan, Hikvision_Operation_Management_Center_scan, HWL_2511_SSpopencgi_Command_scan, \
    Glodon_Linkworks_GetAllData_information_scan, JinsanZhongduan_v9_SQL_injection_scan, \
    FE_upload_Attachment_Servlet_scan, Lanling_EIS_SQL_vul_scan, Likeshop_File_upload_vuln_scan, Ivanti_VPN_RCE_scan, \
    NUUO_camera_command_scan, Multiple_gateway_security_devices_scan, NSFOCUS_bastionhost_privileges_scan, \
    Junos_webauth_operation_upload_scan, Lianda_OA_FileManage_UpLoadFile_scan, Uniview_video_surveillance_scan, \
    WordPres_Bricks_Builder_scan, Zhiyuan_OA_ucpclogin_pwd_reset_scan, Telesquare_TLR_2005Ksh_RCE_scan, \
    Yongyou_getApp_SQL_scan, XMall_Open_Marketplace_SQL_Injection_scan, Tongda_OA_XSS_scan, \
    Toseiweb_network_test_Command_scan, yikatong_ailianyun_scan, Youdian_CMS_GetSpecial_SQL_vul_scan, \
    Telesquare_TLR_2005Ksh_scan, YouyongTPlus_InitServerInfo_SQL_injection_scan, Tongtianxing_CMSV6_vehicle_video_scan, \
    SFDI_Security_Management_System_test_qrcode_b_Command_Vuln_Scan, ChatGPT_Next_Web_XSS_CVE_2023_49785_scan, \
    XVE_2023_23744_scan, Bang_CRM_JILIYU_sql_scan, SpringBlade_errorlist_SQL_scan, JeePlus_validateMobile_SQL_scan, \
    Fanwei_e_Weaver_sql_injection_scan

# 禁用安全请求警告
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def update_proxies(self):
    """更新proxies字典"""
    proxies = {
        'http': f'http://127.0.0.1:{self.proxies_default_value}',
        'https': f'http://127.0.0.1:{self.proxies_default_value}'
    }
    return proxies

# def update_serverJ():
#     """更新serverJ"""
#     global serverJ # 使用全局的serverJ变量
#     serverJ = globals().get('serverJ_key', '') # 检查serverJ_key是否已定义，未定义则使用默认key为空
#     return serverJ


class VulnDetectionApp:
    def __init__(self, root):
        self.proxies_default_value = "8080"
        self.serverj_default_value = ""
        self.fofa_default_value_email= ""
        self.fofa_default_value_key = ""
        self.fofa_default_value_search = ''
        self.fofa_default_value_size = "100"

        self.root = root
        self.root.title("漏洞检测程序")
        self.root.geometry("1000x800")
        self.root.iconbitmap('Config/ico/app.ico')
        self.vulnerabilities = start_vulner_list.vulnerabilities
        self.vars = []  # 存储选择框的变量

        self.create_menu()
        self.create_input_text()
        self.create_output_text()
        self.create_buttons()
        self.create_variables()

    def create_menu(self):
        """创建菜单"""
        menu_bar = tk.Menu(self.root)
        self.root.config(menu=menu_bar)

        file_menu = tk.Menu(menu_bar, tearoff=0)
        file_menu.add_command(label="选择文件", command=self.select_file)
        file_menu.add_command(label="保存输出结果", command=self.save_output)
        file_menu.add_separator()
        file_menu.add_command(label="退出", command=self.root.quit)
        menu_bar.add_cascade(label="菜单", menu=file_menu)

        vulnerabilities_menu = tk.Menu(menu_bar, tearoff=0)
        vulnerabilities_menu.add_command(label="漏洞库", command=self.open_vulnerabilities_window)
        menu_bar.add_cascade(label="漏洞", menu=vulnerabilities_menu)

        peizi_menu = tk.Menu(menu_bar, tearoff=0)
        peizi_menu.add_command(label="Server酱/代理配置", command=self.open_Peizi_sj_window)
        menu_bar.add_cascade(label="配置", menu=peizi_menu)

        cyberspace_menu = tk.Menu(menu_bar, tearoff=0)
        cyberspace_menu.add_command(label="FOFA", command=self.open_Fofa_window)
        cyberspace_menu.add_command(label="Hunter鹰图", command=self.open_Hunter_window)
        menu_bar.add_cascade(label="网络空间测绘", menu=cyberspace_menu)

        help_menu = tk.Menu(menu_bar, tearoff=0)
        help_menu.add_command(label="新变化", command=self.open_UpdateLog_window)
        menu_bar.add_cascade(label="帮助", menu=help_menu)
    def create_input_text(self):
        """创建输入文本框"""
        self.input_frame = tk.Frame(self.root)
        self.input_frame.pack()

        self.file_label = tk.Label(self.input_frame, text="文件路径：")
        self.file_label.pack(side=tk.LEFT)

        self.file_entry = tk.Entry(self.input_frame, width=50)
        self.file_entry.pack(side=tk.LEFT)

    def create_output_text(self):
        """创建输出文本框"""
        output_frame = tk.Frame(self.root)
        output_frame.pack(fill=tk.BOTH, expand=True)  # 使用 pack 布局

        self.output_text = tk.Text(output_frame, bg="black", fg="white", state=tk.DISABLED, font=("Helvetica", 14))
        self.output_text.grid(row=0, column=0, sticky="nsew")  # 使用 grid 布局

        # 添加垂直滚动条
        scrollbar = tk.Scrollbar(output_frame, command=self.output_text.yview)
        scrollbar.grid(row=0, column=1, sticky="ns")  # 使用 grid 布局

        self.output_text.configure(yscrollcommand=scrollbar.set)

        self.output_text.tag_configure("red", foreground="#FF0000", font=("Helvetica", 12, "bold"))
        self.output_text.tag_configure("green", foreground="#00FF00", font=("Helvetica", 12))
        self.output_text.tag_configure("yellow", foreground="yellow", font=("Helvetica", 12))

        # 设置行列权重，使得窗口大小变化时，文本框和滚动条可以自动调整大小
        output_frame.rowconfigure(0, weight=1)
        output_frame.columnconfigure(0, weight=1)

    def create_buttons(self):
        """创建按钮"""
        self.button_frame = tk.Frame(self.root)
        self.button_frame.pack()

        self.detect_button = tk.Button(self.button_frame, text="检测", command=self.detect_vulnerabilities)
        self.detect_button.pack(side=tk.LEFT)

        self.stop_button = tk.Button(self.button_frame, text="停止", command=self.stop_detection)
        self.stop_button.pack(side=tk.LEFT)

    def create_variables(self):
        """创建变量"""
        self.proxies_var = IntVar()
        self.proxies_var.set(0)

        self.serverj_var = IntVar()
        self.serverj_var.set(0)

    def select_file(self):
        """选择文件"""
        file_path = filedialog.askopenfilename(filetypes=[("Text Files", "*.txt")])
        self.file_entry.delete(0, tk.END)
        self.file_entry.insert(tk.END, file_path)

    def detect_vulnerabilities(self):
        """检测漏洞"""
        file_path = self.file_entry.get().strip()
        if not file_path:
            messagebox.showerror("错误", "请输入文件路径")
            return
        with open(file_path, "r") as file:
            urls = file.read().splitlines()
        selected_vulnerabilities = [self.vulnerabilities[index] for index, var in enumerate(self.vars) if
                                    var.get() == 1]
        self.output_text.config(state=tk.NORMAL)
        self.output_text.delete("1.0", tk.END)
        self.output_text.config(state=tk.DISABLED)
        self.stop_detection_flag = False
        detection_thread = threading.Thread(target=self.perform_detection, args=(urls, selected_vulnerabilities))
        detection_thread.start()

    def perform_detection(self, urls, vulnerabilities):
        """执行漏洞检测"""
        # 代理启动开关
        if self.proxies_var.get() == 1:
            self.proxies = update_proxies(self)
            print("已启动代理", self.proxies)
        else:
            self.proxies = None
        # server酱启动开关
        if self.serverj_var.get() == 1:
            serverJ_key = self.serverj_default_value
            #print("server酱启动开关",serverJ_key)
        else:
            serverJ_key = " "

        for url in urls:
            if self.stop_detection_flag:
                break
            print("链接：", url)
            for vulnerability in vulnerabilities:
                if vulnerability == "144.ChatGPT-Next-Web XSS漏洞(CVE-2023-49785)":
                    ChatGPT_Next_Web_XSS_CVE_2023_49785_scan.scan_ChatGPT_Next_Web_XSS_CVE_2023_49785(url, self.proxies,
                                                                                                      self.append_to_output,
                                                                                                      serverJ_key=serverJ_key,
                                                                                                      bugName=vulnerability)
                if vulnerability == "143.JeePlus快速开发平台 validateMobile SQL注入":
                    JeePlus_validateMobile_SQL_scan.scan_JeePlus_validateMobile_SQL(url,
                                                                                    self.proxies, self.append_to_output,
                                                                                    serverJ_key=serverJ_key,
                                                                                    bugName=vulnerability)
                if vulnerability == "142.SpringBlade errorlist SQL报错注入":
                    SpringBlade_errorlist_SQL_scan.scan_SpringBlade_errorlist_SQL(url,
                                                                                  self.proxies, self.append_to_output,
                                                                                  serverJ_key=serverJ_key,
                                                                                  bugName=vulnerability)
                if vulnerability == "141.帮管客 CRM jiliyu SQL注入漏洞":
                    Bang_CRM_JILIYU_sql_scan.scan_Bang_CRM_JILIYU_sql(url,
                                                                      self.proxies, self.append_to_output,
                                                                      serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "140.通天星CMSV6车载定位监控平台 SQL注入漏洞(XVE-2023-23744)":
                    XVE_2023_23744_scan.scan_XVE_2023_23744(url,
                                                            self.proxies, self.append_to_output,
                                                            serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "致远OA ucpcLogin存在密码重置漏洞":
                    Zhiyuan_OA_ucpclogin_pwd_reset_scan.scan_Zhiyuan_OA_ucpclogin_pwd_reset(url, self.proxies,
                                                                                            self.append_to_output,
                                                                                            serverJ_key=serverJ_key,
                                                                                            bugName=vulnerability)
                if vulnerability == "金山终端安全系统V9.0 SQL注入漏洞":
                    JinsanZhongduan_v9_SQL_injection_scan.scan_JinsanZhongduan_v9_SQL_injection(url, self.proxies,
                                                                                                self.append_to_output,
                                                                                                serverJ_key=serverJ_key,
                                                                                                bugName=vulnerability)
                if vulnerability == "通达OA存在反射XSS漏洞":
                    Tongda_OA_XSS_scan.scan_Tongda_OA_XSS(url, self.proxies, self.append_to_output,
                                                          serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "飞企互联FE业务协作平台uploadAttachmentServlet任意文件上传漏洞":
                    FE_upload_Attachment_Servlet_scan.scan_FE_upload_Attachment_Servlet(url, self.proxies,
                                                                                        self.append_to_output,
                                                                                        serverJ_key=serverJ_key,
                                                                                        bugName=vulnerability)
                if vulnerability == "用友畅捷通TPlus InitServerInfo存在SQL注入漏洞":
                    YouyongTPlus_InitServerInfo_SQL_injection_scan.scan_YouyongTPlus_InitServerInfo_SQL_injection(url,
                                                                                                                  self.proxies,
                                                                                                                  self.append_to_output,
                                                                                                                  serverJ_key=serverJ_key,
                                                                                                                  bugName=vulnerability)
                if vulnerability == "联达OA FileManage-UpLoadFile存在任意文件上传漏洞":
                    Lianda_OA_FileManage_UpLoadFile_scan.scan_Lianda_OA_FileManage_UpLoadFile(url, self.proxies,
                                                                                              self.append_to_output,
                                                                                              serverJ_key=serverJ_key,
                                                                                              bugName=vulnerability)
                if vulnerability == "测试漏洞（robots.txt）":
                    ceshi.scan_ceshi(url, self.proxies, self.append_to_output, serverJ_key=serverJ_key,
                                     bugName=vulnerability)
                if vulnerability == "140.京师心智心理健康测评系统-账号密码泄露漏洞":
                    JS_ligerComboBox_information_scan.scan_JS_ligerComboBox_information(url, self.proxies,
                                                                                        self.append_to_output,
                                                                                        serverJ_key=serverJ_key,
                                                                                        bugName=vulnerability)
                if vulnerability == "139.JetBrains TeamCity 身份验证绕过漏洞(CVE-2024-27198)":
                    CVE_2024_27198_scan.scan_CVE_2024_27198(url, self.proxies, self.append_to_output,
                                                            serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "138.网康科技 NS-ASG 应用安全网关 SQL注入漏洞(CVE-2024-2330)":
                    CVE_2024_2330_scan.scan_CVE_2024_2330(url, self.proxies, self.append_to_output,
                                                          serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "137.蓝凌EIS智慧协同平台 rpt_listreport_defi露漏洞nefield.aspx SQL注入漏洞":
                    Lanling_EIS_SQL_vul_scan.scan_Lanling_EIS_SQL_vul(url, self.proxies, self.append_to_output,
                                                                      serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "136.广联达Linkworks GetAllData 信息泄露漏洞":
                    Glodon_Linkworks_GetAllData_information_scan.scan_Glodon_Linkworks_GetAllData_information(url,
                                                                                                              self.proxies,
                                                                                                              self.append_to_output,
                                                                                                              serverJ_key=serverJ_key,
                                                                                                              bugName=vulnerability)
                if vulnerability == "135.通天星CMSV6 车载视频监控平台 信息泄露漏洞":
                    Tongtianxing_CMSV6_vehicle_video_scan.scan_Tongtianxing_CMSV6_vehicle_video(url, self.proxies,
                                                                                                self.append_to_output,
                                                                                                serverJ_key=serverJ_key,
                                                                                                bugName=vulnerability)
                if vulnerability == "134.WordPres Bricks Builder 前台RCE漏洞(CVE-2024-25600)":
                    WordPres_Bricks_Builder_scan.scan_WordPres_Bricks_Builder(url, self.proxies, self.append_to_output,
                                                                              serverJ_key=serverJ_key,
                                                                              bugName=vulnerability)
                if vulnerability == "133.友点CMS GetSpecial SQL注入漏洞":
                    Youdian_CMS_GetSpecial_SQL_vul_scan.scan_Youdian_CMS_GetSpecial_SQL_vul(url, self.proxies,
                                                                                            self.append_to_output,
                                                                                            serverJ_key=serverJ_key,
                                                                                            bugName=vulnerability)
                if vulnerability == "132.CERIO DT系列路由器命令执行漏洞":
                    CERIO_DT_Series_Router_Command_Vul_scan.scan_CERIO_DT_Series_Router_Command_Vul(url, self.proxies,
                                                                                                    self.append_to_output,
                                                                                                    serverJ_key=serverJ_key,
                                                                                                    bugName=vulnerability)
                if vulnerability == "131.XMall开源商城SQL注入漏洞(CVE-2024-24112)":
                    XMall_Open_Marketplace_SQL_Injection_scan.scan_XMall_Open_Marketplace_SQL_Injection(url,
                                                                                                        self.proxies,
                                                                                                        self.append_to_output,
                                                                                                        serverJ_key=serverJ_key,
                                                                                                        bugName=vulnerability)
                if vulnerability == "130.百卓Smart管理平台uploadfile.php文件上传漏洞(CVE-2024-0939)":
                    Byzoro_Smart_Management_upload_scan.scan_Byzoro_Smart_Management_upload(url, self.proxies,
                                                                                            self.append_to_output,
                                                                                            serverJ_key=serverJ_key,
                                                                                            bugName=vulnerability)
                if vulnerability == "129.大华智能物联综合管理平台 任意文件读取漏洞":
                    Dahua_QVD_2023_45063_scan.scan_Dahua_QVD_2023_45063(url, self.proxies, self.append_to_output,
                                                                        serverJ_key=serverJ_key,
                                                                        bugName=vulnerability)

                if vulnerability == "128.用友移动管理系统 getApp SQL注入漏洞":
                    Yongyou_getApp_SQL_scan.scan_Yongyou_getApp_SQL(url, self.proxies, self.append_to_output,
                                                                    serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "127.Ivanti VPN RCE漏洞复现（CVE-2024-21887）":
                    Ivanti_VPN_RCE_scan.scan_Ivanti_VPN_RCE(url, self.proxies, self.append_to_output,
                                                            serverJ_key=serverJ_key,
                                                            bugName=vulnerability)
                if vulnerability == "125.安恒明御安全网关 aaa_local_web_preview文件上传漏洞":
                    ANHENG_Mingyu_security_gateway_file_upload_scan.scan_ANHENG_Mingyu_security_gateway_file_upload(url,
                                                                                                                    self.proxies,
                                                                                                                    self.append_to_output,
                                                                                                                    serverJ_key=serverJ_key,
                                                                                                                    bugName=vulnerability)
                if vulnerability == "124.大华 DSS 数字监控系统 itcBulletin SQL 注入漏洞":
                    Dahua_DSS_system_itcBulletin_SQL_injection_scan.scan_Dahua_DSS_system_itcBulletin_SQL_injection(url,
                                                                                                                    self.proxies,
                                                                                                                    self.append_to_output,
                                                                                                                    serverJ_key=serverJ_key,
                                                                                                                    bugName=vulnerability)
                if vulnerability == "123.绿盟 SAS堡垒机 local_user.php 权限绕过漏洞":
                    NSFOCUS_bastionhost_privileges_scan.scan_NSFOCUS_bastionhost_privileges(url, self.proxies,
                                                                                            self.append_to_output,
                                                                                            serverJ_key=serverJ_key,
                                                                                            bugName=vulnerability)
                if vulnerability == "122.宇视科技视频监控 main-cgi 文件信息泄露漏洞":
                    Uniview_video_surveillance_scan.scan_Uniview_video_surveillance(url, self.proxies,
                                                                                    self.append_to_output,
                                                                                    serverJ_key=serverJ_key,
                                                                                    bugName=vulnerability)
                if vulnerability == "121.多家网关-安全设备存在远程命令执行漏洞":
                    Multiple_gateway_security_devices_scan.scan_Multiple_gateway_security_devices(url, self.proxies,
                                                                                                  self.append_to_output,
                                                                                                  serverJ_key=serverJ_key,
                                                                                                  bugName=vulnerability)
                if vulnerability == "120.Altenergy电力系统控制软件 RCE漏洞":
                    Altenergy_Power_System_Control_scan.scan_Altenergy_Power_System_Control(url, self.proxies,
                                                                                            self.append_to_output,
                                                                                            serverJ_key=serverJ_key,
                                                                                            bugName=vulnerability)
                if vulnerability == "119.海康运行管理中心 RCE漏洞":
                    Hikvision_Operation_Management_Center_scan.scan_Hikvision_Operation_Management_Center(url,
                                                                                                          self.proxies,
                                                                                                          self.append_to_output,
                                                                                                          serverJ_key=serverJ_key,
                                                                                                          bugName=vulnerability)
                if vulnerability == "117.Junos webauth_operation.php 文件上传漏洞(CVE-2023-36844)":
                    Junos_webauth_operation_upload_scan.scan_Junos_webauth_operation_upload(url, self.proxies,
                                                                                            self.append_to_output,
                                                                                            serverJ_key=serverJ_key,
                                                                                            bugName=vulnerability)
                if vulnerability == "116.Telesquare TLR-2005Ksh 路由器 RCE漏洞":
                    Telesquare_TLR_2005Ksh_RCE_scan.scan_Telesquare_TLR_2005Ksh_RCE(url, self.proxies,
                                                                                    self.append_to_output,
                                                                                    serverJ_key=serverJ_key,
                                                                                    bugName=vulnerability)
                if vulnerability == "115.NUUO摄像头远程命令执行漏洞":
                    NUUO_camera_command_scan.scan_NUUO_camera_command(url, self.proxies, self.append_to_output,
                                                                      serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "114.Toseiweb管理端network_test.php参数远程命令执行漏洞":
                    Toseiweb_network_test_Command_scan.scan_Toseiweb_network_test_Command(url, self.proxies,
                                                                                          self.append_to_output,
                                                                                          serverJ_key=serverJ_key,
                                                                                          bugName=vulnerability)
                if vulnerability == "113.likeshop单商户商城系统任意文件上传漏洞":
                    Likeshop_File_upload_vuln_scan.scan_Likeshop_File_upload_vuln(url, self.proxies,
                                                                                  self.append_to_output,
                                                                                  serverJ_key=serverJ_key,
                                                                                  bugName=vulnerability)
                if vulnerability == "112.HWL-2511-SSpopen.cgi命令执行漏洞":
                    HWL_2511_SSpopencgi_Command_scan.scan_HWL_2511_SSpopencgi_Command(url, self.proxies,
                                                                                      self.append_to_output,
                                                                                      serverJ_key=serverJ_key,
                                                                                      bugName=vulnerability)
                if vulnerability == "111.思福迪 运维安全管理系统 test_qrcode_b 远程命令执行漏洞":
                    SFDI_Security_Management_System_test_qrcode_b_Command_Vuln_Scan.Scan_SFDI_Security_Management_System_test_qrcode_b_Command_Vuln(
                        url, self.proxies, self.append_to_output, serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "110.Telesquare TLR-2005Ksh 路由器 getUsernamePassword 信息泄露":
                    Telesquare_TLR_2005Ksh_scan.scan_Telesquare_TLR_2005Ksh(url, self.proxies, self.append_to_output,
                                                                            serverJ_key=serverJ_key,
                                                                            bugName=vulnerability)
                if vulnerability == "109.优卡特脸爱云一脸通智慧管理平台权限绕过漏洞(CVE-2023-6099)":
                    yikatong_ailianyun_scan.scan_yikatong_ailianyun(url, self.proxies, self.append_to_output,
                                                                    serverJ_key=serverJ_key, bugName=vulnerability)
                if vulnerability == "106.泛微e-Weaver SQL注入":
                    Fanwei_e_Weaver_sql_injection_scan.scan_Fanwei_e_Weaver_sql_injection(url, self.proxies,
                                                                                          self.append_to_output,
                                                                                          serverJ_key=serverJ_key,
                                                                                          bugName=vulnerability)

        self.append_to_output("已停止！！！！", "yellow")
    def save_output(self):
        """保存输出结果"""
        file_path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text Files", "*.txt")])
        if file_path:
            with open(file_path, "w") as file:
                output_text = self.output_text.get("1.0", tk.END)
                file.write(output_text)

    def stop_detection(self):
        """停止检测"""
        self.append_to_output("停止ing！！！！", "yellow")
        self.stop_detection_flag = True

    def append_to_output(self, text, tag=None):
            """将文本添加到输出框"""
            self.output_text.config(state=tk.NORMAL)
            if tag:
                self.output_text.insert(tk.END, text + "\n", tag)
            else:
                self.output_text.insert(tk.END, text + "\n")
            self.output_text.config(state=tk.DISABLED)
            self.output_text.see(tk.END)

    def open_Peizi_sj_window(self):
        """打开配置窗口"""
        vulnerabilities_window = Toplevel(self.root)
        vulnerabilities_window.title("Server酱及代理配置")
        # vulnerabilities_window.geometry("400x300")
        vulnerabilities_window.iconbitmap("Config/ico/serverj.ico")
        canvas = tk.Canvas(vulnerabilities_window, width=400, height=300)
        canvas.pack(fill=tk.BOTH, expand=True)

        # 创建一个框架，将内容放置在其中
        scrollable_frame = tk.Frame(canvas)

        # ---------------------------------------------------------------------------------------------
        # 在 "开启代理" 下面添加输入框
        proxy_checkbox = Checkbutton(scrollable_frame, text="开启代理", variable=self.proxies_var)
        proxy_checkbox.grid(row=0, column=0, sticky=tk.W)
        self.proxy_entry = tk.Entry(scrollable_frame)
        self.proxy_entry.grid(row=1, column=0, sticky=tk.W)
        # 设置输入框的默认值为之前保存的值
        self.proxy_entry.insert(0, self.proxies_default_value)
        # 添加提交按钮
        submit_port_button = tk.Button(scrollable_frame, text="保存", command=self.submit_port_text)
        submit_port_button.grid(row=2, column=0, columnspan=2, sticky=tk.W, pady=5)
        # Label用于显示用户输入的文本
        self.display_port_label = tk.Label(scrollable_frame, text="")
        self.display_port_label.grid(row=3, column=0, columnspan=2, sticky=tk.W)
        # ---------------------------------------------------------------------------------------------
        # 在 "开启Server酱" 下面添加输入框
        serverJ_checkbox = Checkbutton(scrollable_frame, text="开启Server酱，请输入key", variable=self.serverj_var)
        serverJ_checkbox.grid(row=4, column=0, sticky=tk.W)
        self.SJKey_entry = tk.Entry(scrollable_frame)
        self.SJKey_entry.grid(row=5, column=0, sticky=tk.W)
        # 设置输入框的默认值为之前保存的值
        self.SJKey_entry.insert(0, self.serverj_default_value)
        submit_SJkey_button = tk.Button(scrollable_frame, text="保存", command=self.submit_SJKey_text)
        submit_SJkey_button.grid(row=6, column=0, columnspan=2, sticky=tk.W, pady=5)
        # Label用于显示用户输入的文本
        self.display_SJKey_label = tk.Label(scrollable_frame, text="")
        self.display_SJKey_label.grid(row=7, column=0, columnspan=2, sticky=tk.W)
        # ---------------------------------------------------------------------------------------------
        canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
    def open_Fofa_window(self):
        """打开FOFA窗口"""
        vulnerabilities_window = Toplevel(self.root)
        vulnerabilities_window.title("fofa")
        # vulnerabilities_window.geometry("400x300")
        vulnerabilities_window.iconbitmap("Config\\ico\\fofa.ico")
        canvas = tk.Canvas(vulnerabilities_window, width=400, height=300)
        canvas.pack(fill=tk.BOTH, expand=True)

        # 创建一个框架，将内容放置在其中
        scrollable_frame = tk.Frame(canvas)

        # ---------------------------------------------------------------------------------------------
        email_label = tk.Label(scrollable_frame, text="Email:")
        email_label.grid(row=0, column=0, sticky=tk.W)
        self.Fofa_entry_email = tk.Entry(scrollable_frame)
        self.Fofa_entry_email.grid(row=0, column=1, sticky=tk.W)
        self.Fofa_entry_email.insert(0, self.fofa_default_value_email)

        key_label = tk.Label(scrollable_frame, text="Key:")
        key_label.grid(row=1, column=0, sticky=tk.W)
        self.Fofa_entry_key = tk.Entry(scrollable_frame)
        self.Fofa_entry_key.grid(row=1, column=1, sticky=tk.W)
        self.Fofa_entry_key.insert(0, self.fofa_default_value_key)

        # 添加提交按钮
        submit_fofa_button = tk.Button(scrollable_frame, text="保存", command=self.submit_Fofa1_text)
        submit_fofa_button.grid(row=2, column=0, columnspan=2, sticky=tk.W, pady=5)
        self.display_fofa_label = tk.Label(scrollable_frame, text="")
        self.display_fofa_label.grid(row=3, column=0, columnspan=2, sticky=tk.W)

        search_label = tk.Label(scrollable_frame, text=" 语  法 :")
        search_label.grid(row=4, column=0, sticky=tk.W)
        self.Fofa_entry_search = tk.Entry(scrollable_frame)
        self.Fofa_entry_search.grid(row=4, column=1, sticky=tk.W)
        self.Fofa_entry_search.insert(0, self.fofa_default_value_search)

        size_label = tk.Label(scrollable_frame, text="输出数量:")
        size_label.grid(row=5, column=0, sticky=tk.W)
        self.Fofa_entry_size = tk.Entry(scrollable_frame)
        self.Fofa_entry_size.grid(row=5, column=1, sticky=tk.W)
        self.Fofa_entry_size.insert(0, self.fofa_default_value_size)
        # 添加提交按钮
        submit_fofa_button = tk.Button(scrollable_frame, text="GO", command=self.submit_Fofa2_text)
        submit_fofa_button.grid(row=6, column=0, columnspan=2, sticky=tk.W, pady=5)
        # ---------------------------------------------------------------------------------------------

        canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")
    def open_Hunter_window(self):
        """打开鹰图窗口"""
        vulnerabilities_window = Toplevel(self.root)
        vulnerabilities_window.title("鹰图")
        # vulnerabilities_window.geometry("400x300")
        vulnerabilities_window.iconbitmap("Config\ico\hunter.ico")
        canvas = tk.Canvas(vulnerabilities_window, width=400, height=300)
        canvas.pack(fill=tk.BOTH, expand=True)

        # 创建一个框架，将内容放置在其中
        scrollable_frame = tk.Frame(canvas)
        canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")

    def open_UpdateLog_window(self):
        """打开更新窗口"""
        vulnerabilities_window = tk.Toplevel(root)
        vulnerabilities_window.title("新变化")
        vulnerabilities_window.geometry("400x300")  # 设置窗口大小

        # 创建一个 Frame 来包含 Text 和 Scrollbar
        frame = tk.Frame(vulnerabilities_window)
        frame.pack(fill=tk.BOTH, expand=True)

        text = loadJson()
        text_widget = tk.Text(frame, wrap="word")
        text_widget.insert(tk.END, text)
        text_widget.config(state=tk.DISABLED)  # 设置为只读
        text_widget.pack(fill=tk.BOTH, expand=True)  # 填充整个窗口

        # 添加垂直滚动条并关联
        scrollbar = tk.Scrollbar(frame, command=text_widget.yview)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        text_widget.config(yscrollcommand=scrollbar.set)
    def submit_port_text(self):
        """提交按钮点击事件"""
        text = self.proxy_entry.get()  # 获取输入框中的文本
        self.proxies_default_value = text  # 保存输入框中的文本为默认值
        proxies_port=self.proxies_default_value
        self.display_port_label.config(text="代理端口成功设置为：127.0.0.1:"+proxies_port)  # 更新Label显示的文本
        return proxies_port

    def submit_SJKey_text(self):
        """提交按钮点击事件"""
        text = self.SJKey_entry.get()  # 获取输入框中的文本
        self.serverj_default_value = text  # 保存输入框中的文本为默认值
        serverJ_key = self.serverj_default_value
        self.display_SJKey_label.config(text="保存成功，您提交的key为:"+serverJ_key)  # 更新Label显示的文本
        return serverJ_key

    def submit_Fofa1_text(self):
        """提交按钮点击事件"""
        text1 = self.Fofa_entry_email.get()
        self.fofa_default_value_email = text1
        text2 = self.Fofa_entry_key.get()
        self.fofa_default_value_key = text2
        self.display_fofa_label.config(text="保存成功")  # 更新Label显示的文本
    def submit_Fofa2_text(self):
        """提交按钮点击事件"""
        text3 = self.Fofa_entry_search.get()
        self.fofa_default_value_search = text3
        text4 = self.Fofa_entry_size.get()
        self.fofa_default_value_size = text4
        FOFA(search_query = self.fofa_default_value_search, email=self.fofa_default_value_email, key=self.fofa_default_value_key, size=self.fofa_default_value_size)

    def open_vulnerabilities_window(self):
        """打开漏洞库窗口"""
        self.vulnerabilities_window = Toplevel(self.root)
        self.vulnerabilities_window.title("漏洞库")
        self.vulnerabilities_window.geometry("800x600")
        self.vulnerabilities_window.iconbitmap("Config/ico/loudongku.ico")
        canvas = tk.Canvas(self.vulnerabilities_window, width=800, height=600)
        canvas.pack(fill=tk.BOTH, expand=True)

        scrollbar = tk.Scrollbar(self.vulnerabilities_window, command=canvas.yview)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        canvas.configure(yscrollcommand=scrollbar.set)

        scrollable_frame = tk.Frame(canvas)
        scrollable_frame.bind("<Configure>", lambda e: canvas.configure(scrollregion=canvas.bbox("all")))
        canvas.create_window((0, 0), window=scrollable_frame, anchor="nw")

        select_all_checkbox_var = IntVar()
        select_all_checkbox = Checkbutton(scrollable_frame, text="全选", variable=select_all_checkbox_var,
                                          command=lambda: self.select_all_vulnerabilities(select_all_checkbox_var))
        select_all_checkbox.pack(anchor=tk.W)

        proxy_checkbox = Checkbutton(scrollable_frame, text="开启代理", variable=self.proxies_var)
        proxy_checkbox.pack(anchor=tk.W)

        serverj_checkbox = Checkbutton(scrollable_frame, text="开启Server酱", variable=self.serverj_var)
        serverj_checkbox.pack(anchor=tk.W)

        detect_button = tk.Button(scrollable_frame, text="确定并开始",
                                  command=self.detect_vulnerabilities_from_library_and_close)
        detect_button.pack(anchor=tk.W, padx=5)

        for index, vulnerability in enumerate(self.vulnerabilities):
            var = IntVar()
            self.vars.append(var)
            checkbox = Checkbutton(scrollable_frame, text=vulnerability, variable=var)
            checkbox.pack(anchor=tk.W)

        canvas.bind("<Configure>", lambda e: canvas.configure(scrollregion=canvas.bbox("all")))
        canvas.bind_all("<MouseWheel>", lambda e: canvas.yview_scroll(int(-1 * (e.delta / 120)), "units"))

    def select_all_vulnerabilities(self, select_all_var):
        """全选漏洞"""
        select_all_state = select_all_var.get()
        for var in self.vars:
            var.set(select_all_state)

    def detect_vulnerabilities_from_library(self):
        """从库中检测漏洞"""
        file_path = self.file_entry.get().strip()
        if not file_path:
            messagebox.showerror("错误", "请输入文件路径")
            return

        with open(file_path, "r") as file:
            urls = file.read().splitlines()

        selected_vulnerabilities = []
        for index, var in enumerate(self.vars):
            if var.get() == 1 and index < len(self.vulnerabilities):
                selected_vulnerabilities.append(self.vulnerabilities[index])

        self.output_text.config(state=tk.NORMAL)
        self.output_text.delete("1.0", tk.END)
        self.output_text.config(state=tk.DISABLED)

        self.stop_detection_flag = False

        detection_thread = threading.Thread(target=self.perform_detection, args=(urls, selected_vulnerabilities))
        detection_thread.start()

    def detect_vulnerabilities_from_library_and_close(self):
        """从库中检测漏洞并关闭窗口"""
        self.detect_vulnerabilities_from_library()  # 调用检测漏洞的方法
        self.vulnerabilities_window.destroy()  # 关闭漏洞库窗口

# 创建根窗口
root = tk.Tk()
# 创建应用实例
app = VulnDetectionApp(root)
# 进入主事件循环
root.mainloop()
