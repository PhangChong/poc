import requests
import urllib3

def common_request(url, path, headers, data=None, json=None, files=None, method='GET', params=None, timeout=10, proxies=None,
                   append_to_output=None):
    """
    发起常规 HTTP 请求

    Args:
        url (str): 目标 URL
        path (str): 请求路径
        headers (dict): 请求头部信息
        data : 请求体数据
        json (dict): JSON 格式请求体数据
        files (dict): 上传文件
        method (str): 请求方法，默认为 'GET'
        params (dict): URL 参数
        timeout (int): 请求超时时间，默认为 10 秒
        proxies (dict): 代理设置
        append_to_output (function): 输出函数，用于打印日志信息

    Returns:
        requests.Response: 请求响应对象，若请求失败返回 None
    """
    if not url.startswith('http://') and not url.startswith('https://'):
        url = 'http://' + url
    target_url = url + path

    try:
        urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
        with requests.Session() as session:
            if method.upper() == 'GET':
                response = session.get(target_url, headers=headers, params=params, verify=False, timeout=timeout,
                                       proxies=proxies)
            elif method.upper() == 'POST':
                response = session.post(target_url, data=data, files=files, json=json, headers=headers, verify=False,
                                        timeout=timeout, proxies=proxies)
            elif method.upper() == 'PUT':
                response = session.put(target_url, data=data, json=json, headers=headers, verify=False,
                                       timeout=timeout, proxies=proxies)
            else:
                return None
            return response
    except requests.Timeout:
        append_to_output(f"[!] 请求超时，跳过URL: {url}", "yellow")
    except requests.ConnectionError as conn_err:
        append_to_output(f"[!] 连接错误: {conn_err}", "yellow")
    except requests.RequestException as req_err:
        append_to_output(f"[-] 请求错误: {req_err}", "yellow")
    except Exception as e:
        if 'HTTPSConnectionPool' in str(e) or 'Burp Suite Professional' in str(e):
            append_to_output(f"[-] {url} 证书校验错误或者证书被拒绝", "yellow")
        else:
            append_to_output(f"[-] 未知错误: {str(e)}", "yellow")
    return None
